!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("ramda")):"function"==typeof define&&define.amd?define(["ramda"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).Blueprint=t(e.ramda)}(this,(function(e){"use strict";function t(e){if("[object Object]"!==Object.prototype.toString.call(e))return!1;const t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}const n=e.filter((t=>!e.isEmpty(t)));function a(e){return{validate:t=>0===n(e.validate(t)).length,explain:t=>{const a=n(e.validate(t));return a.length>0?{schema:e,value:t,errors:a}:null}}}return{and:(...t)=>({name:"and",validate:n=>e.map((e=>e.validate(n)),t)}),explain:function(e,t){return a(e).explain(t)},greaterThan:e=>({name:"greaterThan",validate:t=>t>e?[]:["Type mismatch"]}),number:{name:"number",validate:e=>"number"==typeof e?[]:["Type mismatch"]},object:n=>{let a=!1;const r=e.pipe(e.toPairs,e.map((e=>({key:e[0],schema:e[1]}))))(n),i=t=>e.map((e=>t.hasOwnProperty(e.key)?[]:["Missing key: "+e.key]))(r),o=t=>e.map((e=>e.schema.validate(t[e.key])))(r),l=t=>{if(!a)return[];const r=e.difference(e.keys(t),e.keys(n));return e.length(r)>0?e.map((e=>"Extra key in closed schema: "+e),r):[]};return{name:"object",validate:e=>t(e)?[...i(e),...o(e),...l(e)]:(e=>t(e)?[]:["Not an object"])(e),get closed(){return a=!0,this}}},string:{name:"string",validate:e=>"string"==typeof e?[]:["Type mismatch"]},validate:function(e,t){return a(e).validate(t)}}}));
